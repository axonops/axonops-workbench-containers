---
name: Build Containers

on:
  push:
    branches:
      - initial
    # tags:
    #   - 'v*'

defaults:
  run:
    shell: bash

jobs:
  prepare:
    name: Get Cassandra versions
    runs-on: ubuntu-latest
    steps:
      - name: Get versions
        id: cassandra50_versions
        run: |
          archive_url="https://archive.apache.org/dist/cassandra/"
          url="https://downloads.apache.org/cassandra/"

          # Use curl to fetch the HTML content and grep to filter 4.x versions
          versions40=$(curl -s $archive_url | grep -E '4\.0\.[0-9]+/' | awk '{print $5}'|cut -d \> -f2 | sed 's$/</a$$g' | sort)
          versions41=$(curl -s $archive_url | grep -E '4\.1\.[0-9]+/' | awk '{print $5}'|cut -d \> -f2 | sed 's$/</a$$g' | sort)
          versions50=$(curl -s $archive_url | grep -E '5\.0\.[0-9]+/' | awk '{print $5}'|cut -d \> -f2 | sed 's$/</a$$g' | sort)

          # Print the sorted versions
          echo "versions40=$(echo "$versions40" | jq -R -s 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          echo "versions41=$(echo "$versions41" | jq -R -s 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          echo "versions50=$(echo "$versions50" | jq -R -s 'split("\n")[:-1]')" >> $GITHUB_OUTPUT


  build:
    name: Build containers
    runs-on: ubuntu-latest
    needs: [prepare]
    strategy:
      matrix:
        version: ${{fromJSON(needs.prepare.outputs.versions50)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug
        run: |
          echo "Building Apache Cassandra ${{ matrix.version }}"

      - name: Exit
        run: exit 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: "Get docker info"
        run: |
          echo "Actor: ${{ github.actor }}"
          echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: "Log into GitHub Container Registry"
        if: "github.event_name != 'pull_request'"
        uses: "docker/login-action@v1"
        with:
          registry: "ghcr.io"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get Cassandra versions
        id: versions
        run: |
          cass5=$(curl -sL https://raw.githubusercontent.com/docker-library/cassandra/refs/heads/master/5.0/Dockerfile | grep "ENV CASSANDRA_VERSION" | awk '{print $3}')
          cass5_sha=$(curl -sL https://raw.githubusercontent.com/docker-library/cassandra/refs/heads/master/5.0/Dockerfile | grep "ENV CASSANDRA_SHA512" | awk '{print $3}')
          echo "CASS5_VERSION=${cass5}" >> $GITHUB_ENV
          echo "CASS5_VERSION=${cass5}" >> $GITHUB_OUTPUT
          echo "CASS5_SHA=${cass5_sha}" >> $GITHUB_ENV

          cass4=$(curl -sL https://raw.githubusercontent.com/docker-library/cassandra/refs/heads/master/4.0/Dockerfile | grep "ENV CASSANDRA_VERSION" | awk '{print $3}')
          cass4_sha=$(curl -sL https://raw.githubusercontent.com/docker-library/cassandra/refs/heads/master/4.0/Dockerfile | grep "ENV CASSANDRA_SHA512" | awk '{print $3}')
          echo "CASS4_VERSION=${cass4}" >> $GITHUB_ENV
          echo "CASS4_VERSION=${cass4}" >> $GITHUB_OUTPUT
          echo "CASS4_SHA=${cass4_sha}" >> $GITHUB_ENV

          cass41=$(curl -sL https://raw.githubusercontent.com/docker-library/cassandra/refs/heads/master/4.1/Dockerfile | grep "ENV CASSANDRA_VERSION" | awk '{print $3}')
          cass41_sha=$(curl -sL https://raw.githubusercontent.com/docker-library/cassandra/refs/heads/master/4.1/Dockerfile | grep "ENV CASSANDRA_SHA512" | awk '{print $3}')
          echo "CASS41_VERSION=${cass41}" >> $GITHUB_ENV
          echo "CASS41_VERSION=${cass41}" >> $GITHUB_OUTPUT
          echo "CASS41_SHA=${cass41_sha}" >> $GITHUB_ENV

      - name: Prepare 5.0 AxonOps Workbench Dockerfile
        run: |
          cp axonops-entrypoint.sh cassandra/5.0

          sed -i "s|%BASE_IMAGE%|ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ github.sha }}|g" cassandra/5.0/Dockerfile
          MAJOR_VERSION="${VERSION%.*}"
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV

          sed -i "s/ENV CASSANDRA_VERSION.*/ENV CASSANDRA_VERSION $CASS5_VERSION/g" cassandra/5.0/Dockerfile
          sed -i "s/ENV CASSANDRA_SHA512.*/ENV CASSANDRA_SHA512 $CASS5_SHA/g" cassandra/5.0/Dockerfile

      - name: Build the official cassandra base image 5.0
        uses: docker/build-push-action@v4
        id: build5
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.CASS5_VERSION }}
            GitCommit=${{ github.sha }}
            MAJOR_VERSION=${{ env.MAJOR_VERSION }}
          context: cassandra/5.0
          push: true
          file: cassandra/5.0/Dockerfile
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ steps.versions.outputs.CASS5_VERSION }}
          labels: |
            LABEL org.opencontainers.image.source="https://github.com/${{ env.REPO_OWNER }}/axonops-workbench-containers"

      - name: Prepare 4.1 AxonOps Workbench Dockerfile
        run: |
          cp axonops-entrypoint.sh cassandra/4.1

          sed -i "s|%BASE_IMAGE%|ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ github.sha }}|g" cassandra/4.1/Dockerfile
          MAJOR_VERSION="${VERSION%.*}"
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV

          sed -i "s/ENV CASSANDRA_VERSION.*/ENV CASSANDRA_VERSION $CASS41_VERSION/g" cassandra/4.1/Dockerfile
          sed -i "s/ENV CASSANDRA_SHA512.*/ENV CASSANDRA_SHA512 $CASS41_SHA/g" cassandra/4.1/Dockerfile

      - name: Build the official cassandra base image 4.1
        uses: docker/build-push-action@v4
        id: build41
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.CASS41_VERSION }}
            GitCommit=${{ github.sha }}
            MAJOR_VERSION=${{ env.MAJOR_VERSION }}
          context: cassandra/4.1
          push: true
          file: cassandra/4.1/Dockerfile
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ steps.versions.outputs.CASS41_VERSION }}
          labels: |
            LABEL org.opencontainers.image.source="https://github.com/${{ env.REPO_OWNER }}/axonops-workbench-containers"

      - name: Prepare 4.0 AxonOps Workbench Dockerfile
        run: |
          cp axonops-entrypoint.sh cassandra/4.0

          sed -i "s|%BASE_IMAGE%|ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ github.sha }}|g" cassandra/4.0/Dockerfile
          MAJOR_VERSION="${VERSION%.*}"
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV

          sed -i "s/ENV CASSANDRA_VERSION.*/ENV CASSANDRA_VERSION $CASS4_VERSION/g" cassandra/4.0/Dockerfile
          sed -i "s/ENV CASSANDRA_SHA512.*/ENV CASSANDRA_SHA512 $CASS4_SHA/g" cassandra/4.0/Dockerfile

      - name: Build the official cassandra base image 4.0
        uses: docker/build-push-action@v4
        id: build4
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.CASS4_VERSION }}
            GitCommit=${{ github.sha }}
            MAJOR_VERSION=${{ env.MAJOR_VERSION }}
          context: cassandra/4.0
          push: true
          file: cassandra/4.0/Dockerfile
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ steps.versions.outputs.CASS4_VERSION }}
          labels: |
            LABEL org.opencontainers.image.source="https://github.com/${{ env.REPO_OWNER }}/axonops-workbench-containers"

      - name: Generate manitest
        run: |
          set -x
          REPO5=ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ steps.versions.outputs.CASS5_VERSION }}
          REPO41=ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ env.CASS41_VERSION }}
          REPO4=ghcr.io/${{ env.REPO_OWNER }}/cassandra:${{ env.CASS4_VERSION }}

          jq -n \
            --argjson "${{ env.CASS5_VERSION }}" "$(jq -n --arg digest '${{ steps.build5.outputs.digest }}' --arg tag '${{ steps.versions.outputs.CASS5_VERSION }}' --arg repo "$REPO5" '$ARGS.named')" \
            --argjson "${{ env.CASS41_VERSION }}" "$(jq -n --arg digest '${{ steps.build41.outputs.digest }}' --arg tag '${{ env.CASS41_VERSION }}' --arg repo "$REPO41" '$ARGS.named')" \
            --argjson "${{ env.CASS4_VERSION }}" "$(jq -n --arg digest '${{ steps.build4.outputs.digest }}' --arg tag '${{ env.CASS4_VERSION }}' --arg repo "$REPO4" '$ARGS.named')" \
            '$ARGS.named' > manifest.json

      - name: Commit manifest.json
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add manifest.json
          git commit -m "Add manifest"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
